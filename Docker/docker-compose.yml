version: "3.8"
services:
    mongo-db:
       image: mongo:4.4
       container_name: db-mongo
       hostname: mongo-db
       restart: unless-stopped
       expose:
          - "27017"
       ports:
          - "27017:27017" # localhost:27017
       networks:
          - default
       volumes:
          - mongo-db:/data
       command: --nojournal

    postgres-db:
       image: postgres
       hostname: postgres-db
       container_name: db-postgres
       restart: unless-stopped
       ports:
          - "5432:5432"
       environment:
          - "POSTGRES_PASSWORD=2mJSR80R7e7"
          - "POSTGRES_USER=postgres"
          - "POSTGRES_DB=postgres"
       volumes:
          - postgres-db:/var/lib/postgresql/data

    orion:
       image: fiware/orion
       container_name: fiware-orion
       labels:
          org.fiware: 'tfm'
       depends_on:
         - mongo-db
       restart: unless-stopped
       expose:
          - "1026"
       ports:
         - "1026:1026"
       command: -dbhost mongo-db -logLevel DEBUG -noCache
       networks:
         - default

    cygnus:
        image: fiware/cygnus-ngsi
        hostname: cygnus
        container_name: fiware-cygnus
        depends_on:
          - postgres-db
        restart: unless-stopped
        networks:
          - default
        expose:
          - "5080" # API Port
          - "5055" # Service Port
        ports:
          - "5055:5055"
          - "5080:5080"
        environment:
          - "CYGNUS_POSTGRESQL_HOST=postgres-db" # Hostname of the PostgreSQL server used to persist historical context data
          - "CYGNUS_POSTGRESQL_PORT=5432" # Port that the PostgreSQL server uses to listen to commands
          - "CYGNUS_POSTGRESQL_USER=postgres" # Username for the PostgreSQL database user
          - "CYGNUS_POSTGRESQL_PASS=2mJSR80R7e7" # Password for the PostgreSQL database user
          - "CYGNUS_POSTGRESQL_ENABLE_CACHE=true" # Switch to enable caching within the PostgreSQL configuration
          - "CYGNUS_POSTGRESQL_SERVICE_PORT=5055" # The port the agent.conf is configured for
          - "CYGNUS_LOG_LEVEL=DEBUG" # The logging level for Cygnus
          - "CYGNUS_SERVICE_PORT=5055" # Notification Port that Cygnus listens to for Postgres subscriptions
          - "CYGNUS_API_PORT=5080" # Port that Cygnus listens on for operational reasons

    # IoT-Agent is configured for the JSON Protocol
    iot-agent:
        image: fiware/iotagent-json
        hostname: iot-agent
        container_name: fiware-iot-agent
        depends_on:
          - mongo-db
        restart: unless-stopped
        networks:
          - default
        expose:
          - "4041"
          - "7896"
        ports:
          - "4041:4041" # localhost:4041
          - "7896:7896" # localhost:7896
        environment:
          - IOTA_CB_HOST=orion # name of the context broker to update context
          - IOTA_CB_PORT=1026 # port the context broker listens on to update context
          - IOTA_NORTH_PORT=4041
          - IOTA_REGISTRY_TYPE=mongodb #Whether to hold IoT device info in memory or in a database
          - IOTA_LOG_LEVEL=DEBUG # The log level of the IoT Agent
          - IOTA_DEFAULT_EXPRESSION_LANGUAGE=jexl
          - IOTA_TIMESTAMP=true # Supply timestamp information with each measurement
          - IOTA_CB_NGSI_VERSION=v2 # use NGSIv2 when sending updates for active attributes
          - IOTA_AUTOCAST=true # Ensure Ultralight number values are read as numbers not strings
          - IOTA_MONGO_HOST=mongo-db # The host name of MongoDB
          - IOTA_MONGO_PORT=27017 # The port mongoDB is listening on
          - IOTA_MONGO_DB=iotagentjson # The name of the database used in mongoDB
          - IOTA_HTTP_PORT=7896 # The port used for device traffic over HTTP
          - IOTA_PROVIDER_URL=http://iot-agent:4041
          - IOTA_DEFAULT_RESOURCE=/iot/json
        healthcheck:
          interval: 5s

    grafana:
        image: grafana/grafana:8.4.1
        hostname: grafana
        expose:
          - "3000"
        ports:
          - "3000:3000"
        restart: unless-stopped
        networks:
          - default
        environment:
          - GF_INSTALL_PLUGINS=cloudspout-button-panel, vonage-status-panel
          - GF_SMTP_ENABLED=true
          - GF_SMTP_HOST=email-smtp.us-east-1.amazonaws.com:2587
          - GF_SMTP_USER=AKIA5V7ZGRLYIRMT4O5C
          - GF_SMTP_PASSWORD=BNt+HPnl5/UwmqhPRnoW5aKD1GD3Bd4HUIcIZh8ycLT8
          - GF_SMTP_FROM_ADDRESS=auto-alerts@tfm-fiware.awsapps.com
          - GF_SMTP_SKIP_VERIFY=true
        volumes:
          - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
          - grafana-data:/var/lib/grafana

networks:
  default:
    labels:
      org.fiware: 'tfm'
    ipam:
      config:
        - subnet: 172.18.1.0/24

volumes:
  mongo-db: ~
  postgres-db: ~
  grafana-data: